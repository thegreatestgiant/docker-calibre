name: CD

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:

env:
  REGISTRY_IMAGE: thegreatestgiant/calibre

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            dockerfile: Dockerfile
          - platform: linux/arm64
            dockerfile: Dockerfile.aarch64

    outputs:
      run_number: ${{ steps.settag.outputs.run_number }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set tag to GitHub run number
        id: settag
        run: |
          echo "run_number=${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            latest
            ${{ steps.settag.outputs.run_number }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          echo "${{ steps.build.outputs.digest }}" > "/tmp/digests/digest.sha"

      - name: Sanitize artifact name
        id: sanitize
        run: |
          safe_name=$(echo "${{ matrix.platform }}" | tr '/' '-')
          echo "safe=${safe_name}" >> $GITHUB_OUTPUT

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ steps.sanitize.outputs.safe }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 5

  merge:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            latest
            ${{ needs.build.outputs.run_number }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create \
            $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(find . -type f -name 'digest.sha' -exec sh -c 'for f; do d=$(cat "$f"); echo "${{ env.REGISTRY_IMAGE }}@$d"; done' sh {} +)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ needs.build.outputs.run_number }}
